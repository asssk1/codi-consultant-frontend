import React, { useState, useCallback } from 'react';
import { Camera, Image, Wand2, Lightbulb, CheckCircle } from 'lucide-react';

// Firebase 설정을 위한 전역 변수 (Canvas 환경에서 제공)
// const firebaseConfig = typeof __firebase_config !== 'undefined' ? JSON.parse(__firebase_config) : {};
// const appId = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';
// const initialAuthToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;

// 백엔드 서버 주소
const BACKEND_URL = 'http://localhost:4000';

// 더미 데이터 타입 정의
const mockRecommendation = {
  title: "따뜻한 겨울 출근룩", 
  description: "업로드하신 짙은 코트와 밝은 목폴라를 활용한 깔끔한 비즈니스 캐주얼 스타일입니다.",
  items: [
    { type: "상의", style: "아이보리 목폴라 니트", color: "아이보리"},
    { type: "아우터", style: "차콜 그레이 롱 코트", color: "차콜 그레이"},
    { type: "하의", style: "블랙 슬랙스", color: "블랙"}
  ]
};

// 메인 앱 컴포넌트
const App = () => {
  const [selectedFile, setSelectedFile] = useState(null);
  const [imageBase64, setImageBase64] = useState('');
  const [loading, setLoading] = useState(false);
  const [recommendations, setRecommendations] = useState(null);
  const [error, setError] = useState('');
  const [currentView, setCurrentView] = useState('upload'); // 'upload', 'result'
  
  // 파일 선택 핸들러: 이미지를 Base64로 변환
  const handleFileChange = (event) => {
    const file = event.target.files[0];
    if (file) {
      setSelectedFile(file);
      setError('');
      const reader = new FileReader();
      reader.onloadend = () => {
        // Base64 문자열에서 "data:image/jpeg;base64," 같은 MIME 타입 정보를 제거
        const base64String = reader.result.split(',')[1];
        setImageBase64(base64String);
      };
      reader.readAsDataURL(file);
    }
  };

  // AI 코디 추천 요청 함수
  const requestRecommendation = useCallback(async () => {
    if (!imageBase64) {
      setError('옷 이미지를 먼저 업로드해 주세요.');
      return;
    }
    
    setLoading(true);
    setError('');
    setRecommendations(null);

    try {
      const response = await fetch(`${BACKEND_URL}/api/recommend`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ imageBase64 }),
      });
      
      const data = await response.json();

      if (!response.ok) {
        throw new Error(data.error || 'AI 추천 서버 오류');
      }

      setRecommendations(data.recommendations);
      setCurrentView('result');

    } catch (err) {
      console.error('Fetch Error:', err);
      setError('추천 요청에 실패했습니다. 백엔드 서버(포트 4000)가 실행 중인지 확인해 주세요.');
      // 오류 발생 시에도 더미 데이터로 화면을 보여줌
      setRecommendations([mockRecommendation]); 
      setCurrentView('result');
    } finally {
      setLoading(false);
    }
  }, [imageBase64]);
  
  // UI 컴포넌트: 추천 결과 카드
  const RecommendationCard = ({ rec }) => (
    <div className="p-4 bg-white rounded-xl shadow-lg border border-indigo-100 hover:shadow-xl transition duration-300">
      <div className="flex items-center mb-3">
        <Wand2 className="text-indigo-500 mr-2" size={20} />
        <h3 className="text-xl font-bold text-gray-800">{rec.title}</h3>
      </div>
      <p className="text-gray-600 mb-4 text-sm">{rec.description}</p>
      
      <div className="space-y-2">
        {rec.items.map((item, index) => (
          <div key={index} className="flex justify-between items-center text-sm p-2 bg-indigo-50 rounded-lg">
            <span className="font-medium text-indigo-700">{item.type}</span>
            <span className="text-gray-700">{item.style} ({item.color})</span>
          </div>
        ))}
      </div>
    </div>
  );

  // UI 컴포넌트: 업로드 화면
  const UploadView = () => (
    <div className="p-6 md:p-10 bg-white rounded-2xl shadow-2xl w-full max-w-xl mx-auto">
      <div className="flex items-center mb-6 border-b pb-3">
        <Camera className="text-indigo-500 mr-3" size={28} />
        <h2 className="text-3xl font-extrabold text-gray-800">AI 코디 컨설턴트</h2>
      </div>
      
      <p className="text-gray-600 mb-8">
        가지고 계신 옷 사진을 한 장 업로드하시면, AI가 분석하여 가장 잘 어울리는 코디를 추천해 드립니다.
      </p>

      {/* 이미지 업로드 영역 */}
      <label 
        htmlFor="image-upload" 
        className={`flex flex-col items-center justify-center w-full h-48 border-4 border-dashed rounded-xl cursor-pointer transition duration-300 ${
          imageBase64 ? 'border-green-500 bg-green-50' : 'border-indigo-300 hover:border-indigo-500 hover:bg-indigo-50 bg-gray-50'
        }`}
      >
        {imageBase64 ? (
          <div className="relative w-full h-full">
            <img 
              src={`data:image/jpeg;base64,${imageBase64}`} 
              alt="Uploaded Cloth" 
              className="object-contain w-full h-full p-2 rounded-xl" 
            />
            <CheckCircle className="absolute top-2 right-2 text-green-600 bg-white rounded-full" size={24} />
          </div>
        ) : (
          <div className="flex flex-col items-center justify-center pt-5 pb-6">
            <Image className="w-8 h-8 mb-3 text-indigo-500" />
            <p className="mb-2 text-sm text-gray-500">
              <span className="font-semibold">클릭하여 파일 업로드</span> 또는 드래그 앤 드롭
            </p>
            <p className="text-xs text-gray-400">JPG, PNG (최대 5MB)</p>
          </div>
        )}
        <input 
          id="image-upload" 
          type="file" 
          className="hidden" 
          accept="image/jpeg, image/png" 
          onChange={handleFileChange} 
        />
      </label>
      
      {error && (
        <p className="mt-4 text-red-500 text-sm font-medium flex items-center">
          <Lightbulb className="w-4 h-4 mr-1"/> {error}
        </p>
      )}

      {/* 버튼 */}
      <button
        onClick={requestRecommendation}
        disabled={!imageBase64 || loading}
        className={`w-full mt-8 flex items-center justify-center px-6 py-3 border border-transparent text-base font-medium rounded-xl shadow-sm text-white transition duration-300 transform hover:scale-[1.02]
          ${imageBase64 && !loading ? 'bg-indigo-600 hover:bg-indigo-700' : 'bg-indigo-400 cursor-not-allowed'}
        `}
      >
        {loading ? (
          <>
            <svg className="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
              <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
              <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
            </svg>
            AI가 코디를 분석 중입니다...
          </>
        ) : (
          <>
            <Wand2 className="w-5 h-5 mr-2" />
            AI 코디 추천 받기
          </>
        )}
      </button>
      
      {/* 추가 기능 버튼 */}
      <div className="mt-4 flex justify-center">
          <button
              onClick={() => setError('평가 기능은 다음 개발 단계에서 구현될 예정입니다.')}
              className="text-sm text-indigo-500 hover:text-indigo-700 transition duration-150 p-2 rounded-lg"
          >
              코디 평가 기능 (미구현)
          </button>
      </div>
    </div>
  );

  // UI 컴포넌트: 결과 화면
  const ResultView = () => (
    <div className="p-6 md:p-10 bg-gray-50 rounded-2xl shadow-2xl w-full max-w-3xl mx-auto">
      <div className="flex justify-between items-center mb-8 border-b pb-4">
        <h2 className="text-3xl font-extrabold text-indigo-700 flex items-center">
          <Lightbulb className="mr-3 text-yellow-500" size={28} />
          AI 코디 추천 결과
        </h2>
        <button
          onClick={() => {
            setCurrentView('upload');
            setSelectedFile(null);
            setImageBase64('');
            setRecommendations(null);
          }}
          className="px-4 py-2 text-sm font-medium text-white bg-red-500 rounded-xl hover:bg-red-600 transition duration-150"
        >
          새 옷 업로드
        </button>
      </div>
      
      {/* 업로드 이미지 미리보기 */}
      <div className="mb-8 p-4 border rounded-xl bg-white shadow-inner">
        <h3 className="text-xl font-semibold mb-3 text-gray-700">업로드된 옷</h3>
        {imageBase64 && (
          <img 
            src={`data:image/jpeg;base64,${imageBase64}`} 
            alt="Uploaded Cloth" 
            className="w-40 h-40 object-contain mx-auto rounded-lg border-2 border-indigo-200"
          />
        )}
      </div>

      {/* 추천 목록 */}
      <div className="space-y-6">
        {recommendations && recommendations.length > 0 ? (
          recommendations.map((rec, index) => (
            <RecommendationCard key={index} rec={rec} />
          ))
        ) : (
          <p className="text-gray-500 text-center py-8">추천 결과를 불러올 수 없습니다. 서버 상태를 확인해 주세요.</p>
        )}
      </div>
      
      {error && (
        <p className="mt-8 text-red-500 text-center font-medium">{error}</p>
      )}
    </div>
  );


  // 메인 렌더링
  return (
    <div className="min-h-screen bg-gray-100 flex flex-col items-center py-10 px-4 font-sans">
      <script src="https://cdn.tailwindcss.com"></script>
      <style>{`
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@100..900&display=swap');
        .font-sans { font-family: 'Inter', sans-serif; }
      `}</style>

      <div className="text-center mb-8">
        <h1 className="text-4xl font-black text-indigo-900">AI Codi Consultant</h1>
        <p className="text-indigo-600 mt-2 text-lg">당신의 옷장에 생명을 불어넣으세요.</p>
      </div>
      
      {currentView === 'upload' && <UploadView />}
      {currentView === 'result' && <ResultView />}
      
      <p className="mt-8 text-xs text-gray-400">
        참고: AI 추천 기능을 사용하려면 백엔드 서버(port 4000)가 실행 중이어야 합니다.
      </p>
    </div>
  );
};

export default App;
